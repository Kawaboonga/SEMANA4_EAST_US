trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'semana3_pipeline'
  location: 'westus3'
  resourceGroupName: 'GR_SEMANA3_PIPELINE'
  virtualNetworkName: 'VNet-taller-DevOps'
  subnetName: 'Subnet-taller-DevOps'
  addressPrefix: '10.0.0.0/16'
  subnetPrefix: '10.0.1.0/24'
  securityGroupName: 'NSG-taller-DevOps'
  publicIpName: 'PublicIP-2-taller-DevOps'
  vmName: 'VM-2-taller-DevOps'
  vmSize: 'Standard_B1s'
  adminUsername: 'azureuser'
  adminPassword: 'Password1234$'  # considera usar variable secreta

  imagePublisher: 'Canonical'
  imageOffer: '0001-com-ubuntu-server-jammy'
  imageSku: '22_04-lts-gen2'
  imageVersion: 'latest'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e

      echo "Creando grupo de recursos..."
      az group create --name $(resourceGroupName) --location "$(location)"
      echo "Grupo de recursos creado."

      echo "Creando red virtual..."
      az network vnet create --resource-group $(resourceGroupName) --name $(virtualNetworkName) --address-prefix $(addressPrefix) --subnet-name $(subnetName) --subnet-prefix $(subnetPrefix)
      echo "Red virtual creada."
      az network vnet wait --resource-group $(resourceGroupName) --name $(virtualNetworkName) --created

      echo "Creando grupo de seguridad de red..."
      az network nsg create --resource-group $(resourceGroupName) --name $(securityGroupName)
      echo "Grupo de seguridad de red creado."
      az network nsg wait --resource-group $(resourceGroupName) --name $(securityGroupName) --created

      echo "Configurando reglas de NSG..."
      az network nsg rule create --resource-group $(resourceGroupName) --nsg-name $(securityGroupName) --name AllowSSH --protocol tcp --direction inbound --priority 1000 --source-address-prefix '*' --source-port-range '*' --destination-address-prefix '*' --destination-port-range 22 --access allow
      az network nsg rule create --resource-group $(resourceGroupName) --nsg-name $(securityGroupName) --name AllowHTTP --protocol tcp --direction inbound --priority 1001 --source-address-prefix '*' --source-port-range '*' --destination-port-range 80 --access allow
      az network nsg rule create --resource-group $(resourceGroupName) --nsg-name $(securityGroupName) --name AllowICMP --protocol icmp --direction inbound --priority 1002 --source-address-prefix '*' --source-port-range '*' --destination-port-range '*' --access allow
      echo "Reglas de NSG configuradas."

      echo "Creando IP pública..."
      az network public-ip create --resource-group $(resourceGroupName) --name $(publicIpName) --sku Standard --allocation-method Static
      echo "IP pública creada."
      az network public-ip wait --resource-group $(resourceGroupName) --name $(publicIpName) --created

      echo "Creando máquina virtual..."
      az vm create --resource-group $(resourceGroupName) --name $(vmName) --image $(imagePublisher):$(imageOffer):$(imageSku):$(imageVersion) --size $(vmSize) --admin-username $(adminUsername) --admin-password $(adminPassword) --vnet-name $(virtualNetworkName) --subnet $(subnetName) --nsg $(securityGroupName) --public-ip-address $(publicIpName)
      echo "Máquina virtual creada."
      az vm wait --resource-group $(resourceGroupName) --name $(vmName) --created

      # ====Instalar Apache y publicar una página web simple ====
      echo "Instalando Apache en la VM"
      az vm run-command invoke \
        --resource-group $(resourceGroupName) \
        --name $(vmName) \
        --command-id RunShellScript \
        --scripts "sudo apt-get update -y && sudo apt-get install -y apache2 && sudo systemctl enable apache2 && sudo systemctl restart apache2"

      echo "Creando index.html con metadatos del build..."
      cat > index.html <<EOF
<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>Hola DevOps</title>
</head>
<body style="font-family: system-ui, Arial, sans-serif; margin: 2rem;">
  <h1>Hola curso DevOps</h1>
  <p>Despliegue automatizado de página web en una VM Ubuntu con Apache.</p>
  <hr/>
  <p><strong>Build:</strong> $(Build.BuildId)</p>
  <p><strong>Commit:</strong> $(Build.SourceVersion)</p>
  <p><strong>Fecha cola:</strong> $(Build.QueuedDate)</p>
  <p><strong>Proyecto:</strong> $(System.TeamProject)</p>
</body>
</html>
EOF

      echo "Enviando index.html a la VM (usando base64 + RunCommand)..."
      CONTENT_BASE64=$(base64 -w0 index.html)

      az vm run-command invoke \
        --resource-group $(resourceGroupName) \
        --name $(vmName) \
        --command-id RunShellScript \
        --scripts "echo $CONTENT_BASE64 | base64 -d | sudo tee /var/www/html/index.html >/dev/null && sudo systemctl restart apache2"

      VM_PUBLIC_IP=$(az network public-ip show --resource-group $(resourceGroupName) --name $(publicIpName) --query "ipAddress" -o tsv)
      echo "====================================================="
      echo "Sitio disponible (si la regla HTTP está OK):"
      echo "  URL: http://$VM_PUBLIC_IP"
      echo "====================================================="
